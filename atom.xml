<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[nduthoit]]></title>
  <link href="http://nduthoit.github.com/atom.xml" rel="self"/>
  <link href="http://nduthoit.github.com/"/>
  <updated>2013-02-16T13:47:47-05:00</updated>
  <id>http://nduthoit.github.com/</id>
  <author>
    <name><![CDATA[Nathan Duthoit]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Parallel tasks in Fabric with duplicated hosts]]></title>
    <link href="http://nduthoit.github.com/blog/2013/02/16/parallel-tasks-in-fabric-with-duplicated-hosts/"/>
    <updated>2013-02-16T11:08:00-05:00</updated>
    <id>http://nduthoit.github.com/blog/2013/02/16/parallel-tasks-in-fabric-with-duplicated-hosts</id>
    <content type="html"><![CDATA[<p>At <a href="http://waveapps.com">Wave</a> we have started using <a href="http://fabfile.org">Fabric</a>&#8217;s <a href="http://docs.fabfile.org/en/latest/usage/parallel.html">parallel execution</a> of tasks to run our <a href="http://south.aeracode.org/">south</a> database migrations on all our sharded databases at the same time (instead of serially). To do so we connect to 4-5 worker or app servers and run the migrate command from there. Since we have more than 5 databases we need to run more than one command in parallel on a given server. To achieve that we need to disable <a href="http://docs.fabfile.org/en/latest/usage/execution.html#host-list-deduplication">host list deduplication</a> since our host list for the migrate task looks something like: <code>[app1, app2, wrkr1, wrkr2, app1, app2, wrkr1, wrkr2, app1, app2]</code>.</p>

<p>This has led to an issue where, sometimes, a failure in one of the migrations would not abort the release (i.e. the current Fabric run) as expected. The (great) documentation of the <a href="http://docs.fabfile.org/en/latest/api/core/tasks.html#fabric.tasks.execute">execute task</a> led me to guess that Fabric keeps track of successes and failures on a host by host basis when running in parallel. So if a migration on <code>app1</code> fails but then another one succeeds after that, the failure would get overwritten by the success.</p>

<p>I&#8217;ve put together a sample fabfile that helped me confirm that this is indeed the case:</p>

<figure class='code'><figcaption><span>fabfile.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">multiprocessing</span> <span class="kn">import</span> <span class="n">Lock</span><span class="p">,</span> <span class="n">Value</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="n">run</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">execute</span><span class="p">,</span> <span class="n">env</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">fabric.context_managers</span> <span class="kn">import</span> <span class="n">settings</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">fabric.decorators</span> <span class="kn">import</span> <span class="n">parallel</span><span class="p">,</span> <span class="n">runs_once</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="nd">@parallel</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sample_task</span><span class="p">(</span><span class="n">lock</span><span class="p">,</span> <span class="n">fail_switch</span><span class="p">):</span>
</span><span class='line'>    <span class="n">should_fail</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>    <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">fail_switch</span><span class="o">.</span><span class="n">value</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">fail_switch</span><span class="o">.</span><span class="n">value</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">should_fail</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">should_fail</span><span class="p">:</span>
</span><span class='line'>        <span class="n">run</span><span class="p">(</span><span class="s">&quot;rmdir non_existent_directory&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># Make the successfull task take longer than the failing one so that</span>
</span><span class='line'>        <span class="c"># its exit code overwrites the one of the failed task (if they are ran</span>
</span><span class='line'>        <span class="c"># on the same host in parallel)</span>
</span><span class='line'>        <span class="n">run</span><span class="p">(</span><span class="s">&#39;sleep 5&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nd">@task</span>
</span><span class='line'><span class="nd">@runs_once</span>
</span><span class='line'><span class="k">def</span> <span class="nf">test</span><span class="p">():</span>
</span><span class='line'>    <span class="k">with</span> <span class="n">settings</span><span class="p">(</span><span class="n">dedupe_hosts</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">env</span><span class="o">.</span><span class="n">hosts</span>
</span><span class='line'>        <span class="n">lock</span> <span class="o">=</span> <span class="n">Lock</span><span class="p">()</span>
</span><span class='line'>        <span class="n">fail_switch</span> <span class="o">=</span> <span class="n">Value</span><span class="p">(</span><span class="s">&#39;i&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">execute</span><span class="p">(</span><span class="n">sample_task</span><span class="p">,</span> <span class="n">lock</span><span class="p">,</span> <span class="n">fail_switch</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;WE DID NOT ABORT&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you run the task with two different hosts, as expected the failure on the one host aborts the fabric run (proof is that &#8220;WE DID NOT ABORT&#8221; does not get printed to the console).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(workdir)nduthoit@Nathans-MacBook-Pro:~/workdir/parallel_fabric$ fab test -H 87.78.87.119,87.78.87.118
</span><span class='line'>[87.78.87.119] Executing task 'test'
</span><span class='line'>['87.78.87.119', '87.78.87.118']
</span><span class='line'>[87.78.87.119] Executing task 'sample_task'
</span><span class='line'>[87.78.87.118] Executing task 'sample_task'
</span><span class='line'>[87.78.87.118] run: sleep 5
</span><span class='line'>[87.78.87.119] run: rmdir non_existent_directory
</span><span class='line'>[87.78.87.119] out: 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Fatal error: run() received nonzero return code 1 while executing!
</span><span class='line'>
</span><span class='line'>Requested: rmdir non_existent_directory
</span><span class='line'>Executed: /bin/bash -l -c "rmdir non_existent_directory"
</span><span class='line'>
</span><span class='line'>Aborting.
</span><span class='line'>[87.78.87.118] out: 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Fatal error: One or more hosts failed while executing task 'sample_task'
</span><span class='line'>
</span><span class='line'>Aborting.</span></code></pre></td></tr></table></div></figure>


<p>Now if you run the task with the same host repeated twice, the failure on the one host says that it is aborting but the success of the second task (<code>sleep 5</code>) overwrites the failure and fabric continues running and &#8220;WE DID NOT ABORT&#8221; does get printed to the console.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(workdir)nduthoit@Nathans-MacBook-Pro:~/workdir/paralle_fabric$ fab test -H 87.78.87.119,87.78.87.119
</span><span class='line'>[87.78.87.119] Executing task 'test'
</span><span class='line'>['87.78.87.119', '87.78.87.119']
</span><span class='line'>[87.78.87.119] Executing task 'sample_task'
</span><span class='line'>[87.78.87.119] Executing task 'sample_task'
</span><span class='line'>[87.78.87.119] run: sleep 5
</span><span class='line'>[87.78.87.119] run: rmdir non_existent_directory
</span><span class='line'>[87.78.87.119] out: rmdir: failed to remove `non_existent_directory': No such file or directory
</span><span class='line'>[87.78.87.119] out: 
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Fatal error: run() received nonzero return code 1 while executing!
</span><span class='line'>
</span><span class='line'>Requested: rmdir non_existent_directory
</span><span class='line'>Executed: /bin/bash -l -c "rmdir non_existent_directory"
</span><span class='line'>
</span><span class='line'>Aborting.
</span><span class='line'>[87.78.87.119] out: 
</span><span class='line'>
</span><span class='line'>WE DID NOT ABORT
</span><span class='line'>
</span><span class='line'>Done.</span></code></pre></td></tr></table></div></figure>


<h3>Workaround</h3>

<p>I&#8217;ve checked with <a href="http://bitprophet.org">bitprophet</a> and this will be fixed in fab 2 with the new <a href="https://github.com/pyinvoke/invoke">Invoke library</a>.  Looking forward to giving it a try.</p>

<p>In the meanwhile, the workaround for us is to use a shared dictionary (using <code>multiprocessing.Manager().dict()</code>) that is keyed on the database (since we only run one task per database) and is used to keep track of successes. That dictionary is passed to the fabric task that executes the <code>migrate</code> commands in parallel. Once all the parallel runs of the task have completed, we check that each run has recorded a success in the shared dictionary. If it&#8217;s not the case we abort the execution.</p>
]]></content>
  </entry>
  
</feed>
